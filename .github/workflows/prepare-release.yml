---
name: Prepare release

on:
  workflow_dispatch:
    inputs:
      version:
        description: The tag to release
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  build:
    strategy:
      matrix:
        name:
          - linux-x86-64-gnu
          - linux-x86-64-musl
          - linux-armv7-gnu
          - linux-arm64-gnu
          - mac-x86-64
          - windows-x86-64
        include:
          - name: linux-x86-64-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: false

          - name: linux-x86-64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cross: true

          - name: linux-armv7-gnu
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            cross: true

          - name: linux-arm64-gnu
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true

          - name: mac-x86-64
            os: macos-latest
            target: x86_64-apple-darwin
            cross: false

          - name: windows-x86-64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            cross: false

    name: Binaries for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Install cross
        if: matrix.job.use-cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Get build cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        shell: bash
        run: |
          if [[ "${{ matrix.job.use-cross }}" == "true" ]]; then
            cross build --release --locked --target ${{ matrix.job.target }}
          else
            cargo build --release --locked --target ${{ matrix.job.target }}
          fi
      - name: Package
        shell: bash
        run: |
          ext=""
          [[ "${{ matrix.name }}" == windows-* ]] && ext=".exe"
          bin="target/${{ matrix.target }}/release/timecalc${ext}"
          version=$(echo "${{ github.ref }}" | cut -d/ -f3)
          dst="timecalc-${{ matrix.target }}-${version}"
          mkdir "$dst"
          mv "$bin" "$dst/"
          cp README.md LICENSE "$dst/"
      - name: Archive (tar)
        if: '! startsWith(matrix.name, ''windows-'')'
        shell: bash
        run: |
          version=$(echo "${{ github.ref }}" | cut -d/ -f3)
          dst="timecalc-${{ matrix.target }}-${version}"
          tar cavf "$dst.tgz" "$dst"
      - name: Archive (zip)
        if: startsWith(matrix.name, 'windows-')
        shell: bash
        run: |
          version=$(echo "${{ github.ref }}" | cut -d/ -f3)
          dst="timecalc-${{ matrix.target }}-${version}"
          7z a "$dst.zip" "$dst"
      - name: Create release draft
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            timecalc-*.tgz
            timecalc-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
